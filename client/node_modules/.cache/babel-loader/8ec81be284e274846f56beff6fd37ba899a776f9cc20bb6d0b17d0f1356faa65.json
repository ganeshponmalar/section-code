{"ast":null,"code":"import toast from 'react-hot-toast';\n\n/** validate login page username */\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  return errors;\n}\n\n/** validate for password */\nexport async function passwordVerify() {\n  let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (!values.password) {\n    error.password = toast.error(\"password Required...!\");\n  } else if (values.password.include(\" \")) {\n    error.password = toast.error(\"Wrong Password\");\n  } else i;\n}\n\n/** validate username */\n\nfunction usernameVerify() {\n  let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (!values.username) {\n    error.username = toast.error('Username Required...!');\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error('Invalid Username..!');\n  }\n  return error;\n}","map":{"version":3,"names":["toast","usernameValidate","values","errors","usernameVerify","passwordVerify","error","arguments","length","undefined","password","include","i","username","includes"],"sources":["/home/ganesan/Desktop/appletree-app/client/src/Components/helper/validate.js"],"sourcesContent":["import toast from 'react-hot-toast'\n\n\n\n/** validate login page username */\nexport async function usernameValidate(values){\n\n    const errors = usernameVerify({},values)\n\n    return errors;\n\n}\n\n/** validate for password */\nexport  async function passwordVerify(error =[], values){\n    if(!values.password){\n        error.password = toast.error(\"password Required...!\");\n    }else if(values.password.include(\" \")){\n        error.password = toast.error(\"Wrong Password\")\n\n    }else i\n\n    }\n\n\n\n\n\n\n\n\n\n/** validate username */\n\nfunction usernameVerify(error = [], values){\n\n    if(!values.username){\n\n        error.username = toast.error('Username Required...!');\n\n    }else if(values.username.includes(\" \")){\n\n        error.username = toast.error('Invalid Username..!')\n    }\n\n    return error\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;;AAInC;AACA,OAAO,eAAeC,gBAAgBA,CAACC,MAAM,EAAC;EAE1C,MAAMC,MAAM,GAAGC,cAAc,CAAC,CAAC,CAAC,EAACF,MAAM,CAAC;EAExC,OAAOC,MAAM;AAEjB;;AAEA;AACA,OAAQ,eAAeE,cAAcA,CAAA,EAAmB;EAAA,IAAlBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAE,EAAE;EAAA,IAAEL,MAAM,GAAAK,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACnD,IAAG,CAACP,MAAM,CAACQ,QAAQ,EAAC;IAChBJ,KAAK,CAACI,QAAQ,GAAGV,KAAK,CAACM,KAAK,CAAC,uBAAuB,CAAC;EACzD,CAAC,MAAK,IAAGJ,MAAM,CAACQ,QAAQ,CAACC,OAAO,CAAC,GAAG,CAAC,EAAC;IAClCL,KAAK,CAACI,QAAQ,GAAGV,KAAK,CAACM,KAAK,CAAC,gBAAgB,CAAC;EAElD,CAAC,MAAKM,CAAC;AAEP;;AAUJ;;AAEA,SAASR,cAAcA,CAAA,EAAoB;EAAA,IAAnBE,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEL,MAAM,GAAAK,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAEtC,IAAG,CAACP,MAAM,CAACW,QAAQ,EAAC;IAEhBP,KAAK,CAACO,QAAQ,GAAGb,KAAK,CAACM,KAAK,CAAC,uBAAuB,CAAC;EAEzD,CAAC,MAAK,IAAGJ,MAAM,CAACW,QAAQ,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAC;IAEnCR,KAAK,CAACO,QAAQ,GAAGb,KAAK,CAACM,KAAK,CAAC,qBAAqB,CAAC;EACvD;EAEA,OAAOA,KAAK;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}