{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useState } from 'react';\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\n\n/**   custom hook */\nexport default function useFetch(query) {\n  _s();\n  const [getData, setData] = useState({\n    isLoading: false,\n    apiData: undefined,\n    status: null,\n    serverError: null\n  });\n  useEffect(() => {\n    if (!query) return;\n    const fetchData = async () => {\n      try {\n        setData(prev => ({\n          ...prev,\n          isLoading: true\n        }));\n        const {\n          data,\n          status\n        } = await axios.get(`/api/${query}`);\n        if (status === 201) {\n          setData(prev => ({\n            ...prev,\n            isLoading: false\n          }));\n          setData(prev => ({\n            ...prev,\n            apiData: data,\n            status: status\n          }));\n        }\n        setData(prev => ({\n          ...prev,\n          isLoading: false\n        }));\n      } catch (error) {\n        setData(prev => ({\n          ...prev,\n          isLoading: false,\n          serverError: error\n        }));\n      }\n    };\n    fetchData();\n  }, [query]);\n  return [getData, setData];\n}\n_s(useFetch, \"64cORKX8aXULvhQgAynr4hrNux0=\");","map":{"version":3,"names":["axios","useState","defaults","baseURL","process","env","REACT_APP_SERVER_DOMAIN","useFetch","query","_s","getData","setData","isLoading","apiData","undefined","status","serverError","useEffect","fetchData","prev","data","get","error"],"sources":["/home/ganesan/Desktop/appletree-app/client/src/hooks/fetch.hook.js"],"sourcesContent":["import axios from 'axios';\nimport { useState } from 'react';\n\n\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\n\n\n\n\n/**   custom hook */\nexport default function useFetch(query){\n\n    const [getData,setData] =  useState({isLoading: false, apiData: undefined, status: null, serverError: null})\n     \n\n    useEffect(()=>{\n\n        if(!query) return;\n\n        const fetchData = async()=>{\n\n            try{\n                 setData(prev=> ({...prev, isLoading: true}));\n\n                 const {data,status} = await axios.get(`/api/${query}`)\n                 if(status === 201){\n                    setData(prev=>({...prev,isLoading: false}));\n\n                    setData(prev =>({...prev,apiData: data,status: status}));\n                 }\n                 setData(prev =>({...prev,isLoading: false}))\n\n            }catch(error){\n\n                 setData(prev =>({...prev, isLoading: false, serverError: error}));\n\n            }\n        }\n        fetchData()\n\n\n    },[query])\n\n\nreturn[getData,setData];\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAGhCD,KAAK,CAACE,QAAQ,CAACC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,uBAAuB;;AAK5D;AACA,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAC;EAAAC,EAAA;EAEnC,MAAM,CAACC,OAAO,EAACC,OAAO,CAAC,GAAIV,QAAQ,CAAC;IAACW,SAAS,EAAE,KAAK;IAAEC,OAAO,EAAEC,SAAS;IAAEC,MAAM,EAAE,IAAI;IAAEC,WAAW,EAAE;EAAI,CAAC,CAAC;EAG5GC,SAAS,CAAC,MAAI;IAEV,IAAG,CAACT,KAAK,EAAE;IAEX,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAS;MAEvB,IAAG;QACEP,OAAO,CAACQ,IAAI,KAAI;UAAC,GAAGA,IAAI;UAAEP,SAAS,EAAE;QAAI,CAAC,CAAC,CAAC;QAE5C,MAAM;UAACQ,IAAI;UAACL;QAAM,CAAC,GAAG,MAAMf,KAAK,CAACqB,GAAG,CAAE,QAAOb,KAAM,EAAC,CAAC;QACtD,IAAGO,MAAM,KAAK,GAAG,EAAC;UACfJ,OAAO,CAACQ,IAAI,KAAG;YAAC,GAAGA,IAAI;YAACP,SAAS,EAAE;UAAK,CAAC,CAAC,CAAC;UAE3CD,OAAO,CAACQ,IAAI,KAAI;YAAC,GAAGA,IAAI;YAACN,OAAO,EAAEO,IAAI;YAACL,MAAM,EAAEA;UAAM,CAAC,CAAC,CAAC;QAC3D;QACAJ,OAAO,CAACQ,IAAI,KAAI;UAAC,GAAGA,IAAI;UAACP,SAAS,EAAE;QAAK,CAAC,CAAC,CAAC;MAEjD,CAAC,QAAMU,KAAK,EAAC;QAERX,OAAO,CAACQ,IAAI,KAAI;UAAC,GAAGA,IAAI;UAAEP,SAAS,EAAE,KAAK;UAAEI,WAAW,EAAEM;QAAK,CAAC,CAAC,CAAC;MAEtE;IACJ,CAAC;IACDJ,SAAS,CAAC,CAAC;EAGf,CAAC,EAAC,CAACV,KAAK,CAAC,CAAC;EAGd,OAAM,CAACE,OAAO,EAACC,OAAO,CAAC;AACvB;AAACF,EAAA,CAnCuBF,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}