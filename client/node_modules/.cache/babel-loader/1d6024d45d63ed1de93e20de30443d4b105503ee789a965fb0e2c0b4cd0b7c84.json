{"ast":null,"code":"import toast from 'react-hot-toast';\n\n/** validate login page username */\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  return errors;\n}\n/**  validate password */\n\nexport async function passwordValidate(values) {\n  const errors = passwordVerify({}, values);\n  return errors;\n}\n\n/** validate password */\nfunction passwordVerify() {\n  let errors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  /* eslint-disable no-useless-escape */\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n  if (!values.password) {\n    errors.password = toast.error(\"Password Required...!\");\n  } else if (values.password.includes(\" \")) {\n    errors.password = toast.error(\"Wrong Password...!\");\n  } else if (values.password.length < 4) {\n    errors.password = toast.error(\"Password must be more than 4 characters long\");\n  } else if (!specialChars.test(values.password)) {\n    errors.password = toast.error(\"Password must have special character\");\n  }\n  return errors;\n}\n\n/** validate reset for password */\nexport async function resetPasswordValidation(values) {\n  const errors = passwordVerify({}, values);\n  if (values.password !== values.confirm_pwd) {\n    errors.exit = toast.error(\"password not match\");\n  }\n  return errors;\n}\n\n/**  validate for resetPassword */\n\n/** validate username */\n\nfunction usernameVerify() {\n  let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (!values.username) {\n    error.username = toast.error('Username Required...!');\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error('Invalid Username..!');\n  }\n  return error;\n}\n\n/**  validation for register form */\n\nexport default function registerValidation(values) {\n  const errors = usernameVerify({}, values);\n  console.log(errors, 'show errorw');\n  passwordVerify(errors, values);\n  emailVerify(errors, values);\n  return errors;\n}\n\n/** validate email */\n\nfunction emailVerify() {\n  let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (!values.email) {\n    error.email = toast.error(\"Email Required...!\");\n  } else if (values.email.includes(\" \")) {\n    error.email = toast.error(\"Wrong Email...!\");\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    error.email = toast.error(\"Invalid email address...!\");\n  }\n  return error;\n}\n\n/**  validate for the profile page */\n\nexport async function profileValidation(values) {\n  const errors = emailVerify([], values);\n  console.log(errors);\n  return errors;\n}","map":{"version":3,"names":["toast","usernameValidate","values","errors","usernameVerify","passwordValidate","passwordVerify","arguments","length","undefined","specialChars","password","error","includes","test","resetPasswordValidation","confirm_pwd","exit","username","registerValidation","console","log","emailVerify","email","profileValidation"],"sources":["/home/ganesan/Desktop/appletree-app/client/src/Components/helper/validate.js"],"sourcesContent":["import toast from 'react-hot-toast'\n\n\n\n/** validate login page username */\nexport async function usernameValidate(values){\n\n    const errors = usernameVerify({},values)\n\n    return errors;\n\n}\n/**  validate password */\n\nexport async function passwordValidate(values){\n\n    const errors = passwordVerify({},values);\n\n    return errors;\n}\n\n\n/** validate password */\nfunction passwordVerify(errors = {}, values){\n    /* eslint-disable no-useless-escape */\n    const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n\n    if(!values.password){\n        errors.password = toast.error(\"Password Required...!\");\n\n    } else if(values.password.includes(\" \")){\n        errors.password = toast.error(\"Wrong Password...!\");\n\n    }else if(values.password.length < 4){\n        errors.password = toast.error(\"Password must be more than 4 characters long\");\n\n    }else if(!specialChars.test(values.password)){\n        errors.password = toast.error(\"Password must have special character\");\n    }\n\n    return errors;\n}\n\n/** validate reset for password */\nexport async function resetPasswordValidation(values){\n\n    const errors = passwordVerify({},values);\n\n    if(values.password!== values.confirm_pwd){\n        errors.exit = toast.error(\"password not match\")\n    }\n\n    return errors;\n}\n\n\n\n/**  validate for resetPassword */\n\n\n\n\n/** validate username */\n\nfunction usernameVerify(error = [], values){\n\n    if(!values.username){\n\n        error.username = toast.error('Username Required...!');\n\n    }else if(values.username.includes(\" \")){\n\n        error.username = toast.error('Invalid Username..!')\n    }\n\n    return error\n}\n\n\n\n\n\n/**  validation for register form */\n\nexport default function registerValidation(values){\n\n    const errors = usernameVerify({},values);\n    console.log(errors,'show errorw')\n\n    passwordVerify(errors,values); \n    emailVerify(errors,values);\n\n    return errors;\n}\n\n\n\n\n\n\n/** validate email */\n\nfunction emailVerify(error ={}, values){\n\n    if(!values.email){\n\n        error.email = toast.error(\"Email Required...!\");\n\n    }else if(values.email.includes(\" \")){\n\n        error.email = toast.error(\"Wrong Email...!\")\n\n    }else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)){\n\n        error.email = toast.error(\"Invalid email address...!\")\n        \n    }\n\n    return error;\n}\n\n\n\n/**  validate for the profile page */\n\nexport async function profileValidation(values){\n\n    const errors = emailVerify([],values);\n    \n    console.log(errors);\n    \n    return errors;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}